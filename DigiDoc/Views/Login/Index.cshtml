@using DigiDoc.DataAccess.Models;
@model DigiDoc.Models.LoginRequestModel
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutLogin.cshtml";
    var SecuirtyQuestionList = new List<DigiDoc.DataAccess.Models.SecurityQuestionModel>();
    if (ViewBag.SecurityQuestionList != null)
    {
        SecuirtyQuestionList = (List<DigiDoc.DataAccess.Models.SecurityQuestionModel>)ViewBag.SecurityQuestionList;
    }
}



<div class="col-lg-6">
    <div class="login">
        <h2>Login</h2>
        <div class="form-group">
            <form name="LoginForm" id="LoginForm" method="post" action="@Url.Action("ValidateLogin","Login")">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <input type="text" name="UserName" id="userName" autocomplete="off" class="form-control" placeholder="User Name" tabindex="1" maxlength="100">
                </div>
                <div class="form-group">
                    <div class="icon-input">
                        <a href="#">
                            <i id="togglePassword" class="far fa-eye" onclick="showPasswordClick(this)" tabindex="3"></i>
                            <!--<i class="far fa-eye-slash"></i>-->
                        </a>
                        <input type="password" name="UserPassword" id="userPassword" autocomplete="off" class="form-control" placeholder="Password" tabindex="2" maxlength="30">
                    </div>
                </div>

                @Html.ValidationMessageFor(x => x.UserName)

                <input type="submit" value="Login" class="btn" tabindex="4">
            </form>
            <a data-bs-toggle="modal" href="#forgotPassword" data-toggle="modal" role="button" tabindex="5">Forgot Password</a>
        </div>
    </div>

</div>





<div class="modal model-cstm fade" id="forgotPassword" aria-hidden="true" aria-labelledby="exampleModalToggleLabel" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalToggleLabel">Forgot/Reset Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("ValidateLoginCredentials","Login")">
                   @Html.AntiForgeryToken()
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group ">
                                <label>User Name</label>
                                <input name="UserName" id="resetpswd_userName" autocomplete="off" class="form-control" maxlength="100">
                            </div>
                        </div>

                    </div>

                    <ul class="nav cstm-tabs nav-tabs" id="myTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <button class="nav-link active" id="password-tab" data-bs-toggle="tab" data-bs-target="#passwordTab" type="button" role="tab" aria-controls="passwordTab" aria-selected="true">Option 1</button>
                        </li>
                        <li class="nav-item" role="presentation">
                            <button class="nav-link" id="question-tab" data-bs-toggle="tab" data-bs-target="#questionTab" type="button" role="tab" aria-controls="questionTab" aria-selected="false">Option 2</button>
                        </li>
                    </ul>
                    <div class="tab-content cstm-content" id="myTabContent">
                        <div class="tab-pane fade show active" id="passwordTab" role="tabpanel" aria-labelledby="password-tab">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label>Old Password </label>
                                    <div class="icon-input">
                                        <a href="#">
                                            <i id="toggleResetPassword" class="far fa-eye" onclick="ResetshowPasswordClick()"></i>
                                        </a>

                                        <input type="password" autocomplete="off" name="UserPassword" id="resetpswd_userpassword" class="form-control" maxlength="30">
                                    </div>

                                </div>
                            </div>
                        </div>
                        <div class="tab-pane fade" id="questionTab" role="tabpanel" aria-labelledby="question-tab">

                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group ">
                                        <label>Security Question</label>
                                        <select name="SecuirityQuestion" id="resetpswd_secuirityquestion" class="form-control form-select">
                                            @if (SecuirtyQuestionList != null)
                                            {
                                                <option value="-1">Please select</option>
                                                foreach (SecurityQuestionModel securityQuestion in SecuirtyQuestionList)
                                                {
                                                    <option value="@(securityQuestion.SecurityQuestionID)">@(securityQuestion.SecurityQuestion)</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="form-group ">
                                        <label>Answer</label>
                                        <input name="SecurityAnswer" autocomplete="off" id="resetpaswd_securityanswer" type="text" class="form-control" maxlength="150">
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    @Html.ValidationMessageFor(x => x.UserPassword)
                    <div class="button-wrapper d-flex justify-content-center">
                        <input type="button" class="btn btn-secondary" data-bs-dismiss="modal" value="Cancel">
                        <input type="submit" class="btn btn-primary" value="Ok">
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>





<div class="modal model-cstm fade" id="ResetPasswordModel" aria-hidden="true" aria-labelledby="exampleModalToggleLabel2" tabindex="-1" data-keyboard="false" data-backdrop="static">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalToggleLabel2">Reset Password</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" ></button>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("ResetPassword","Login")" id="frmResetPassword">
                    @Html.AntiForgeryToken()
                    <div class="row">
                        @if (Model != null)
                        {
                        @Html.HiddenFor(model => model.UserID)
                        @Html.HiddenFor(model => model.UserName)
                        }
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>New Password</label>

                                <div class="icon-input">
                                    <a href="#" tabindex="7">
                                        <i id="toggleNewPassword" class="far fa-eye" onclick="showNewPasswordClick()" ></i>
                                    </a>

                                    <input name="NewPassword" autocomplete="off" id="newpassword" type="password" placeholder="New Password" class="form-control" tabindex="6" maxlength="30">

                                </div>
                            </div>

                        </div>
                    
                        <div class="col-md-6">
                            <div class="form-group">
                                <label>Retype Password</label>
                                <div class="icon-input">
                                    <a href="#" tabindex="9">
                                        <i id="toggleRetypedPassword" class="far fa-eye" onclick="showRetypedPasswordClick()"></i>
                                    </a>
                                    <input name="RetypedNewPassword" autocomplete="off" id="retypednewpassword" type="password" placeholder="Re-type New Password" class="form-control" tabindex="8" maxlength="30">


                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group ">
                                <label>New Security Question</label>
                                <select name="SecuirityQuestion" id="secuirityquestion" class="form-control form-select" tabindex="10">
                                    @if (SecuirtyQuestionList != null)
                                    {
                                        foreach (SecurityQuestionModel securityQuestion in SecuirtyQuestionList)
                                        {
                                            <option value="@(securityQuestion.SecurityQuestionID)">@(securityQuestion.SecurityQuestion)</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12">
                            <div class="form-group ">
                                <label>Answer</label>
                                <input name="SecurityAnswer" autocomplete="off" id="securityanswer" type="text" class="form-control" tabindex="11" maxlength="150">
                            </div>
                        </div>
                    </div>
                    @Html.Label("Error", new { @class = "field-validation-error", @id = "Errortext" })
                    <div class="button-wrapper d-flex justify-content-center">

                        <input type="button" name="ResetSubmitButon" id="reset_cancel_buton" value="Cancel" class="btn btn-secondary" data-bs-dismiss="modal" tabindex="13">
                        <input type="submit" name="ResetSubmitButon" id="reset_submit_buton" value="Ok" class="btn btn-primary" tabindex="12">
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>
<div class="modal model-cstm fade" id="messageModal" aria-hidden="true" aria-labelledby="messageModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalMessageHeader">Message</h5>
            </div>
            <div class="modal-body">
                <div class="message">
                    <p id="modalMessageContent">
                        Success
                    </p>
                </div>
                <div class="button-wrapper d-flex justify-content-center">
                    <button class="btn btn-primary" type="button" data-bs-dismiss="modal">Ok</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!--region Model Windows End-->



@section Scripts
                    {
    @*<script src="~/assets/js/jquery-3.5.1.slim.min.js"></script>
        <script src="~/assets/js/jquery.validate.min.js"></script>*@
    <script src="~/assets/js/jquery.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/jquery.validate/1.19.3/jquery.validate.min.js"></script>
    <script src="//ajax.aspnetcdn.com/ajax/mvc/5.2.3/jquery.validate.unobtrusive.min.js"></script>
    <script>
            var isFirstLogin = "@ViewBag.ResetPassword"
            var showForgotPasswordWindow = "@ViewBag.ShowForgotPasswordWindow"

            function showPasswordClick() {


                var passwordType = $('#userPassword');

                if (passwordType.attr('type') === 'password') {
                    console.log('passord');
                    $('#userPassword').attr('type', 'text');
                    document.getElementById("togglePassword").classList.remove('fa-eye');
                    document.getElementById("togglePassword").classList.add('fa-eye-slash');
                }
                else {
                    console.log('text');
                    $('#userPassword').attr('type', 'password');
                    document.getElementById("togglePassword").classList.remove('fa-eye-slash');
                    document.getElementById("togglePassword").classList.add('fa-eye');
                }
            }
            function ResetshowPasswordClick() {


                var passwordType = $('#resetpswd_userpassword');

                if (passwordType.attr('type') === 'password') {
                    console.log('passord');
                    $('#resetpswd_userpassword').attr('type', 'text');
                    document.getElementById("toggleResetPassword").classList.remove('fa-eye');
                    document.getElementById("toggleResetPassword").classList.add('fa-eye-slash');
                }
                else {
                    console.log('text');
                    $('#resetpswd_userpassword').attr('type', 'password');
                    document.getElementById("toggleResetPassword").classList.remove('fa-eye-slash');
                    document.getElementById("toggleResetPassword").classList.add('fa-eye');
                }
            }
            function showNewPasswordClick() {



                if ($('#newpassword').attr('type')=== 'password') {

                    $('#newpassword').attr('type', 'text');
                    document.getElementById("toggleNewPassword").classList.remove('fa-eye');
                    document.getElementById("toggleNewPassword").classList.add('fa-eye-slash');
                }
                else {

                    $('#newpassword').attr('type', 'password');
                    document.getElementById("toggleNewPassword").classList.remove('fa-eye-slash');
                    document.getElementById("toggleNewPassword").classList.add('fa-eye');
                }
            }
            function showRetypedPasswordClick() {


                var passwordType = $('#retypednewpassword');

                if ($('#retypednewpassword').attr('type') === 'password') {
                    console.log('passord');
                    $('#retypednewpassword').attr('type', 'text');
                    document.getElementById("toggleRetypedPassword").classList.remove('fa-eye');
                    document.getElementById("toggleRetypedPassword").classList.add('fa-eye-slash');
                }
                else {
                    console.log('text');
                    $('#retypednewpassword').attr('type', 'password');
                    document.getElementById("toggleRetypedPassword").classList.remove('fa-eye-slash');
                    document.getElementById("toggleRetypedPassword").classList.add('fa-eye');
                }
            }

            $(document).ready(function () {
                $('#frmResetPassword').on('submit', function (e) {
                    e.preventDefault();
                    var url = $(this).attr('action');
                    var data = $(this).serialize();
                   
                    $.ajax({
                        url: url,
                        data: data,
                        type: "POST",
                        success: function (data) {
                            //

                          

                            if (data.Result == "true" || data.Result == true) {
                                $("#Errortext").empty();
                                $('#ResetPasswordModel').modal('hide')
                                $('#modalMessageHeader').html('Success')
                                $('#modalMessageContent').html(data.Message)
                                $('#modalMessageContent').parent().removeClass("");
                                $('#modalMessageContent').parent().addClass("message");
                                $('#messageModal').modal('show');

                            }
                            else {

                                $("#Errortext").text(data.Message);
                            }


                        },
                        error: function (error) {
                            //  bootbox.alert("Failed");
                        }
                    })



                })
              //  $("#userName").focus();
                if (isFirstLogin == "true") {
                    $("#Errortext").empty();
                    $('#ResetPasswordModel').modal('show');
                }
                if (showForgotPasswordWindow == "true") {
                   /* $('#forgotPassword').modal('show');*/
                }
                });
            $(function () {
                $("#userName").focus();
                $("#userName").keypress(function (e) {
                    if (e.which == 32) {
                        e.preventDefault();
                    }
                })
            });
            //$(function () {



            //    //$.validator.addMethod(
            //    //    "regex",
            //    //    function (value, element, regexp) {
            //    //        var re = new RegExp(regexp);
            //    //        return this.optional(element) || re.test(value);
            //    //    },
            //    //    "Please check your input."
            //    //);
            //    // Initialize form validation on the registration form.
            //    // It has the name attribute "registration"
            //    $("form[name='LoginForm']").validate({
            //        // Specify validation rules
            //        rules: {
            //            // The key name on the left side is the name attribute
            //            // of an input field. Validation rules are defined
            //            // on the right side

            //            'userName': "required",
            //        },
            //        // Specify validation error messages
            //        messages: {

            //            'userName':"Please enter the address"
            //            /*'Profiles[0].City': language != null && language == "fr" ? "Veuillez entrer la ville" : "Please enter the city",*/

            //        },
            //        errorPlacement: function (error, element, label) {
            //            //if (element.hasClass('selectpicker') && element.next('button').next('.dropdown-menu').length) {
            //            //    error.insertAfter(element.next('button').next('.dropdown-menu'));
            //            //}
            //            //else {
            //            //    error.insertAfter(element);

            //            //}
            //            console.log(error);
            //        },
            //        // Make sure the form is submitted to the destination defined
            //        // in the "action" attribute of the form when valid
            //        submitHandler: function (form) {
            //            console.log('submited');
            //            //form.submit();
            //        },
            //        invalidHandler: function (form, validator) {
            //            var errors = validator.numberOfInvalids();
            //            if (errors) {
            //                var el = validator.errorList[0].element;
            //                $('html, body').animate({ scrollTop: $(el).offset().top - 250 }, 'slow', function () {
            //                    validator.errorList[0].element.focus();
            //                });

            //            }
            //        }
            //    });
            //});


    </script>
}
